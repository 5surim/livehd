/* Generated by Yosys 0.8+506 (git sha1 349c4725, gcc 8.3.0 -fPIC -Os) */

(* top =  1  *)
(* src = "fft_top.v:8" *)
module fft_top(clk, reset, in_push, in_real, in_imag, in_stall, out_push_F, out_real_F, out_imag_F, out_stall);
  (* src = "fft_top.v:95|butterfly.v:75" *)
  wire [15:0] _000_;
  (* src = "fft_top.v:95|butterfly.v:75" *)
  wire [15:0] _001_;
  (* src = "fft_top.v:95|butterfly.v:75" *)
  wire [15:0] _002_;
  (* src = "fft_top.v:95|butterfly.v:75" *)
  wire [15:0] _003_;
  (* src = "fft_top.v:95|butterfly.v:75" *)
  wire [31:0] _004_;
  (* src = "fft_top.v:95|butterfly.v:75" *)
  wire [31:0] _005_;
  (* src = "fft_top.v:95|butterfly.v:75" *)
  wire [31:0] _006_;
  (* src = "fft_top.v:95|butterfly.v:75" *)
  wire [31:0] _007_;
  (* src = "fft_top.v:95|butterfly.v:75" *)
  wire [29:0] _008_;
  (* src = "fft_top.v:95|butterfly.v:75" *)
  wire [29:0] _009_;
  (* src = "fft_top.v:95|butterfly.v:75" *)
  wire [29:0] _010_;
  (* src = "fft_top.v:95|butterfly.v:75" *)
  wire [29:0] _011_;
  (* src = "fft_top.v:95|butterfly.v:75" *)
  wire [15:0] _012_;
  (* src = "fft_top.v:95|butterfly.v:75" *)
  wire [15:0] _013_;
  (* src = "fft_top.v:95|butterfly.v:75" *)
  wire [15:0] _014_;
  (* src = "fft_top.v:95|butterfly.v:75" *)
  wire [15:0] _015_;
  (* src = "fft_top.v:95|butterfly.v:124" *)
  wire _016_;
  (* src = "fft_top.v:95|butterfly.v:124" *)
  wire _017_;
  (* src = "fft_top.v:95|butterfly.v:124" *)
  wire _018_;
  (* src = "fft_top.v:95|butterfly.v:124" *)
  wire _019_;
  (* src = "fft_top.v:95|butterfly.v:129" *)
  wire _020_;
  (* src = "fft_top.v:95|butterfly.v:129" *)
  wire _021_;
  (* src = "fft_top.v:95|butterfly.v:129" *)
  wire _022_;
  (* src = "fft_top.v:95|butterfly.v:129" *)
  wire _023_;
  (* src = "fft_top.v:95|butterfly.v:91" *)
  (* unused_bits = "0 1" *)
  wire [29:0] _024_;
  (* src = "fft_top.v:95|butterfly.v:92" *)
  (* unused_bits = "0 1" *)
  wire [29:0] _025_;
  (* src = "fft_top.v:95|butterfly.v:93" *)
  (* unused_bits = "0 1" *)
  wire [29:0] _026_;
  (* src = "fft_top.v:95|butterfly.v:94" *)
  (* unused_bits = "0 1" *)
  wire [29:0] _027_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire [3:0] _028_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire [3:0] _029_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire [3:0] _030_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire [3:0] _031_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire [3:0] _032_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire [3:0] _033_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire [3:0] _034_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire [3:0] _035_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire [2:0] _036_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire [2:0] _037_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire [3:0] _038_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire [4:0] _039_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire _040_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire _041_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire [3:0] _042_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire [3:0] _043_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire _044_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire _045_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire _046_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire _047_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire [1:0] _048_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire [3:0] _049_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire [3:0] _050_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire _051_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire [31:0] _052_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire _053_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:316" *)
  wire _054_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire [2:0] _055_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire [3:0] _056_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire _057_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire [4:0] _058_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire [3:0] _059_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire [3:0] _060_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire _061_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire [3:0] _062_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire [31:0] _063_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire _064_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire _065_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire [2:0] _066_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire [4:0] _067_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire _068_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire [2:0] _069_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire [4:0] _070_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire _071_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire [2:0] _072_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire [4:0] _073_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire [1:0] _074_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire [4:0] _075_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:107" *)
  wire [4:0] _076_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:150" *)
  (* unused_bits = "4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _077_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:185" *)
  (* unused_bits = "3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _078_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:246" *)
  (* unused_bits = "2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire [4:0] _083_;
  wire [4:0] _084_;
  wire [4:0] _085_;
  wire [4:0] _086_;
  wire [3:0] _087_;
  wire [3:0] _088_;
  wire [31:0] _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire [3:0] _093_;
  wire [3:0] _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire [3:0] _098_;
  wire _099_;
  wire [3:0] _100_;
  wire [3:0] _101_;
  wire [3:0] _102_;
  wire [2:0] _103_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:142" *)
  wire _104_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:155" *)
  wire _105_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:190" *)
  wire _106_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:222" *)
  wire _107_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:224" *)
  wire _108_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:243" *)
  wire _109_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:281" *)
  wire _110_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:142" *)
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire [4:0] _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:15" *)
  wire [3:0] _119_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:15" *)
  wire [3:0] _120_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:15" *)
  wire [2:0] _121_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:15" *)
  wire [3:0] _122_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:15" *)
  wire [3:0] _123_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:15" *)
  wire [2:0] _124_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:15" *)
  wire [3:0] _125_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:15" *)
  wire [3:0] _126_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:15" *)
  wire [2:0] _127_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:15" *)
  wire [3:0] _128_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:15" *)
  wire [3:0] _129_;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:15" *)
  wire [2:0] _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire [3:0] _135_;
  wire [3:0] _136_;
  wire [3:0] _137_;
  wire [3:0] _138_;
  wire [3:0] _139_;
  wire [3:0] _140_;
  wire [3:0] _141_;
  wire [2:0] _142_;
  wire [2:0] _143_;
  wire [2:0] _144_;
  wire [2:0] _145_;
  wire [2:0] _146_;
  wire [2:0] _147_;
  wire [2:0] _148_;
  wire [3:0] _149_;
  wire [3:0] _150_;
  wire [3:0] _151_;
  wire [3:0] _152_;
  wire [3:0] _153_;
  wire [3:0] _154_;
  wire [3:0] _155_;
  wire [3:0] _156_;
  wire [3:0] _157_;
  wire [3:0] _158_;
  wire [3:0] _159_;
  wire [2:0] _160_;
  wire [2:0] _161_;
  wire [2:0] _162_;
  wire [2:0] _163_;
  wire [2:0] _164_;
  wire [2:0] _165_;
  wire [3:0] _166_;
  wire [3:0] _167_;
  wire [3:0] _168_;
  wire [3:0] _169_;
  wire [3:0] _170_;
  wire [3:0] _171_;
  wire [3:0] _172_;
  wire [3:0] _173_;
  wire [3:0] _174_;
  wire [3:0] _175_;
  wire [3:0] _176_;
  wire [3:0] _177_;
  wire [3:0] _178_;
  wire [3:0] _179_;
  wire [3:0] _180_;
  wire [3:0] _181_;
  wire [3:0] _182_;
  wire [3:0] _183_;
  wire [3:0] _184_;
  wire [3:0] _185_;
  wire [3:0] _186_;
  wire [3:0] _187_;
  wire [3:0] _188_;
  wire [3:0] _189_;
  wire [3:0] _190_;
  wire [3:0] _191_;
  wire [2:0] _192_;
  wire [2:0] _193_;
  wire [2:0] _194_;
  wire [2:0] _195_;
  wire [2:0] _196_;
  wire [2:0] _197_;
  wire [2:0] _198_;
  wire [2:0] _199_;
  wire [3:0] _200_;
  wire [3:0] _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  (* src = "fft_top.v:76|mem_32x16.v:39" *)
  wire [3:0] _211_;
  (* src = "fft_top.v:76|mem_32x16.v:39" *)
  wire [31:0] _212_;
  (* src = "fft_top.v:76|mem_32x16.v:39" *)
  wire [31:0] _213_;
  (* src = "fft_top.v:76|mem_32x16.v:39" *)
  wire [3:0] _214_;
  (* src = "fft_top.v:76|mem_32x16.v:39" *)
  wire [31:0] _215_;
  (* src = "fft_top.v:76|mem_32x16.v:39" *)
  wire [31:0] _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire [31:0] _220_;
  wire [31:0] _221_;
  wire [31:0] _222_;
  wire [31:0] _223_;
  wire [31:0] _224_;
  wire [31:0] _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  (* src = "fft_top.v:39" *)
  wire [31:0] W;
  (* src = "fft_top.v:38" *)
  wire [2:0] W_addr;
  (* src = "fft_top.v:41" *)
  wire [31:0] X;
  (* src = "fft_top.v:42" *)
  wire [31:0] Y;
  (* src = "fft_top.v:95|butterfly.v:14" *)
  wire [15:0] \butterfly_0.Ai ;
  (* src = "fft_top.v:95|butterfly.v:32" *)
  reg [15:0] \butterfly_0.Ai_F ;
  (* src = "fft_top.v:95|butterfly.v:41" *)
  reg [15:0] \butterfly_0.Ai_Fd2 ;
  (* src = "fft_top.v:95|butterfly.v:13" *)
  wire [15:0] \butterfly_0.Ar ;
  (* src = "fft_top.v:95|butterfly.v:31" *)
  reg [15:0] \butterfly_0.Ar_F ;
  (* src = "fft_top.v:95|butterfly.v:40" *)
  reg [15:0] \butterfly_0.Ar_Fd2 ;
  (* src = "fft_top.v:95|butterfly.v:16" *)
  wire [15:0] \butterfly_0.Bi ;
  (* src = "fft_top.v:95|butterfly.v:34" *)
  reg [15:0] \butterfly_0.Bi_F ;
  (* src = "fft_top.v:95|butterfly.v:15" *)
  wire [15:0] \butterfly_0.Br ;
  (* src = "fft_top.v:95|butterfly.v:33" *)
  reg [15:0] \butterfly_0.Br_F ;
  (* src = "fft_top.v:95|butterfly.v:18" *)
  wire [15:0] \butterfly_0.Wi ;
  (* src = "fft_top.v:95|butterfly.v:36" *)
  reg [15:0] \butterfly_0.Wi_F ;
  (* src = "fft_top.v:95|butterfly.v:17" *)
  wire [15:0] \butterfly_0.Wr ;
  (* src = "fft_top.v:95|butterfly.v:35" *)
  reg [15:0] \butterfly_0.Wr_F ;
  (* src = "fft_top.v:95|butterfly.v:20" *)
  reg [15:0] \butterfly_0.Xi_F ;
  (* src = "fft_top.v:95|butterfly.v:59" *)
  reg [31:0] \butterfly_0.Xi_full_F ;
  (* src = "fft_top.v:95|butterfly.v:19" *)
  reg [15:0] \butterfly_0.Xr_F ;
  (* src = "fft_top.v:95|butterfly.v:58" *)
  reg [31:0] \butterfly_0.Xr_full_F ;
  (* src = "fft_top.v:95|butterfly.v:22" *)
  reg [15:0] \butterfly_0.Yi_F ;
  (* src = "fft_top.v:95|butterfly.v:61" *)
  reg [31:0] \butterfly_0.Yi_full_F ;
  (* src = "fft_top.v:95|butterfly.v:21" *)
  reg [15:0] \butterfly_0.Yr_F ;
  (* src = "fft_top.v:95|butterfly.v:60" *)
  reg [31:0] \butterfly_0.Yr_full_F ;
  (* src = "fft_top.v:95|butterfly.v:48" *)
  reg [29:0] \butterfly_0.Zia_F ;
  (* src = "fft_top.v:95|butterfly.v:54" *)
  wire [30:0] \butterfly_0.Ziadd ;
  (* src = "fft_top.v:95|butterfly.v:49" *)
  reg [29:0] \butterfly_0.Zib_F ;
  (* src = "fft_top.v:95|butterfly.v:46" *)
  reg [29:0] \butterfly_0.Zra_F ;
  (* src = "fft_top.v:95|butterfly.v:47" *)
  reg [29:0] \butterfly_0.Zrb_F ;
  (* src = "fft_top.v:95|butterfly.v:53" *)
  wire [30:0] \butterfly_0.Zrsub ;
  (* src = "fft_top.v:95|butterfly.v:12" *)
  wire \butterfly_0.clk ;
  (* src = "fft_top.v:9" *)
  input clk;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:78" *)
  wire [3:0] \fft_ctrl_sm_0.A_addr ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:79" *)
  reg [3:0] \fft_ctrl_sm_0.A_addr_F ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:80" *)
  reg [3:0] \fft_ctrl_sm_0.A_addr_Fd2 ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:81" *)
  reg [3:0] \fft_ctrl_sm_0.A_addr_Fd3 ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:82" *)
  reg [3:0] \fft_ctrl_sm_0.A_addr_Fd4 ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:83" *)
  wire [3:0] \fft_ctrl_sm_0.B_addr ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:84" *)
  reg [3:0] \fft_ctrl_sm_0.B_addr_F ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:85" *)
  reg [3:0] \fft_ctrl_sm_0.B_addr_Fd2 ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:86" *)
  reg [3:0] \fft_ctrl_sm_0.B_addr_Fd3 ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:87" *)
  reg [3:0] \fft_ctrl_sm_0.B_addr_Fd4 ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:54" *)
  wire [2:0] \fft_ctrl_sm_0.W_addr ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:20" *)
  reg [2:0] \fft_ctrl_sm_0.W_addr_F ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:70" *)
  wire [2:0] \fft_ctrl_sm_0.butterfly ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:69" *)
  reg [2:0] \fft_ctrl_sm_0.butterfly_F ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:10" *)
  wire \fft_ctrl_sm_0.clk ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:64" *)
  wire [3:0] \fft_ctrl_sm_0.counter ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:63" *)
  reg [3:0] \fft_ctrl_sm_0.counter_F ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:47" *)
  reg [4:0] \fft_ctrl_sm_0.current_state_F ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:15" *)
  wire [15:0] \fft_ctrl_sm_0.in_imag ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:13" *)
  wire \fft_ctrl_sm_0.in_push ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:14" *)
  wire [15:0] \fft_ctrl_sm_0.in_real ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:50" *)
  wire \fft_ctrl_sm_0.in_stall ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:16" *)
  reg \fft_ctrl_sm_0.in_stall_F ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:48" *)
  wire [4:0] \fft_ctrl_sm_0.next_state ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:89" *)
  wire \fft_ctrl_sm_0.out_push ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:29" *)
  reg \fft_ctrl_sm_0.out_push_F ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:30" *)
  (* unused_bits = "0" *)
  wire \fft_ctrl_sm_0.out_stall ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:52" *)
  wire [3:0] \fft_ctrl_sm_0.read_addr_1 ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:18" *)
  reg [3:0] \fft_ctrl_sm_0.read_addr_1_F ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:53" *)
  wire [3:0] \fft_ctrl_sm_0.read_addr_2 ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:19" *)
  reg [3:0] \fft_ctrl_sm_0.read_addr_2_F ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:10" *)
  wire [3:0] \fft_ctrl_sm_0.read_addr_lut_0.A_addr ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:11" *)
  wire [3:0] \fft_ctrl_sm_0.read_addr_lut_0.B_addr ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:12" *)
  wire [2:0] \fft_ctrl_sm_0.read_addr_lut_0.W_addr ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:9" *)
  wire [2:0] \fft_ctrl_sm_0.read_addr_lut_0.butterfly ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:8" *)
  wire [1:0] \fft_ctrl_sm_0.read_addr_lut_0.stage ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:11" *)
  wire \fft_ctrl_sm_0.reset ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:76" *)
  wire \fft_ctrl_sm_0.skip ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:72" *)
  reg \fft_ctrl_sm_0.skip_F ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:73" *)
  reg \fft_ctrl_sm_0.skip_Fd2 ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:74" *)
  reg \fft_ctrl_sm_0.skip_Fd3 ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:75" *)
  reg \fft_ctrl_sm_0.skip_Fd4 ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:67" *)
  wire [1:0] \fft_ctrl_sm_0.stage ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:66" *)
  reg [1:0] \fft_ctrl_sm_0.stage_F ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:56" *)
  wire [3:0] \fft_ctrl_sm_0.write_addr_1 ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:22" *)
  reg [3:0] \fft_ctrl_sm_0.write_addr_1_F ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:59" *)
  wire [3:0] \fft_ctrl_sm_0.write_addr_2 ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:25" *)
  reg [3:0] \fft_ctrl_sm_0.write_addr_2_F ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:61" *)
  wire \fft_ctrl_sm_0.write_back ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:27" *)
  reg \fft_ctrl_sm_0.write_back_F ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:57" *)
  wire [31:0] \fft_ctrl_sm_0.write_data_1 ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:23" *)
  reg [31:0] \fft_ctrl_sm_0.write_data_1_F ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:58" *)
  wire \fft_ctrl_sm_0.write_en_1 ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:24" *)
  reg \fft_ctrl_sm_0.write_en_1_F ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:60" *)
  wire \fft_ctrl_sm_0.write_en_2 ;
  (* src = "fft_top.v:56|fft_ctrl_sm.v:26" *)
  reg \fft_ctrl_sm_0.write_en_2_F ;
  (* src = "fft_top.v:13" *)
  input [15:0] in_imag;
  (* src = "fft_top.v:11" *)
  input in_push;
  (* src = "fft_top.v:12" *)
  input [15:0] in_real;
  (* src = "fft_top.v:14" *)
  output in_stall;
  (* src = "fft_top.v:76|mem_32x16.v:9" *)
  wire \mem_32x16_0.clk ;
  (* src = "fft_top.v:76|mem_32x16.v:16" *)
  wire [3:0] \mem_32x16_0.read_addr_1 ;
  (* src = "fft_top.v:76|mem_32x16.v:18" *)
  wire [3:0] \mem_32x16_0.read_addr_2 ;
  (* src = "fft_top.v:76|mem_32x16.v:17" *)
  wire [31:0] \mem_32x16_0.read_data_1 ;
  (* src = "fft_top.v:76|mem_32x16.v:19" *)
  wire [31:0] \mem_32x16_0.read_data_2 ;
  (* src = "fft_top.v:76|mem_32x16.v:10" *)
  wire [3:0] \mem_32x16_0.write_addr_1 ;
  (* src = "fft_top.v:76|mem_32x16.v:13" *)
  wire [3:0] \mem_32x16_0.write_addr_2 ;
  (* src = "fft_top.v:76|mem_32x16.v:11" *)
  wire [31:0] \mem_32x16_0.write_data_1 ;
  (* src = "fft_top.v:76|mem_32x16.v:14" *)
  wire [31:0] \mem_32x16_0.write_data_2 ;
  (* src = "fft_top.v:76|mem_32x16.v:12" *)
  wire \mem_32x16_0.write_en_1 ;
  (* src = "fft_top.v:76|mem_32x16.v:15" *)
  wire \mem_32x16_0.write_en_2 ;
  (* src = "fft_top.v:31" *)
  wire [31:0] muxed_write_data_1;
  (* src = "fft_top.v:17" *)
  output [15:0] out_imag_F;
  (* src = "fft_top.v:44" *)
  wire out_push;
  (* src = "fft_top.v:15" *)
  output out_push_F;
  reg out_push_F;
  (* src = "fft_top.v:16" *)
  output [15:0] out_real_F;
  (* src = "fft_top.v:18" *)
  input out_stall;
  (* src = "fft_top.v:25" *)
  wire [3:0] read_addr_1;
  (* src = "fft_top.v:27" *)
  wire [3:0] read_addr_2;
  (* src = "fft_top.v:26" *)
  wire [31:0] read_data_1;
  (* src = "fft_top.v:28" *)
  wire [31:0] read_data_2;
  (* src = "fft_top.v:10" *)
  input reset;
  (* src = "fft_top.v:90|w_lut.v:11" *)
  wire [31:0] \w_lut_0.W ;
  (* src = "fft_top.v:90|w_lut.v:10" *)
  wire [2:0] \w_lut_0.addr ;
  (* src = "fft_top.v:29" *)
  wire [3:0] write_addr_1;
  (* src = "fft_top.v:33" *)
  wire [3:0] write_addr_2;
  (* src = "fft_top.v:36" *)
  wire write_back;
  (* src = "fft_top.v:30" *)
  wire [31:0] write_data_1;
  (* src = "fft_top.v:34" *)
  (* unused_bits = "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] write_data_2;
  (* src = "fft_top.v:32" *)
  wire write_en_1;
  (* src = "fft_top.v:35" *)
  wire write_en_2;
  always @(posedge clk)
      out_push_F <= \fft_ctrl_sm_0.out_push_F ;
  assign \butterfly_0.Ziadd  = { \butterfly_0.Zia_F [29], \butterfly_0.Zia_F  } + (* src = "fft_top.v:95|butterfly.v:71" *) { \butterfly_0.Zib_F [29], \butterfly_0.Zib_F  };
  assign _005_ = { \butterfly_0.Ar_Fd2 [15], \butterfly_0.Ar_Fd2 [15], \butterfly_0.Ar_Fd2 [15], \butterfly_0.Ar_Fd2 [15], \butterfly_0.Ar_Fd2 , 12'h000 } + (* src = "fft_top.v:95|butterfly.v:97" *) { \butterfly_0.Zrsub [30], \butterfly_0.Zrsub  };
  assign _004_ = { \butterfly_0.Ai_Fd2 [15], \butterfly_0.Ai_Fd2 [15], \butterfly_0.Ai_Fd2 [15], \butterfly_0.Ai_Fd2 [15], \butterfly_0.Ai_Fd2 , 12'h000 } + (* src = "fft_top.v:95|butterfly.v:98" *) { \butterfly_0.Ziadd [30], \butterfly_0.Ziadd  };
  assign _016_ = $signed(\butterfly_0.Xr_full_F ) > (* src = "fft_top.v:95|butterfly.v:124" *) $signed(32'd2147418112);
  assign _017_ = $signed(\butterfly_0.Xi_full_F ) > (* src = "fft_top.v:95|butterfly.v:124" *) $signed(32'd2147418112);
  assign _018_ = $signed(\butterfly_0.Yr_full_F ) > (* src = "fft_top.v:95|butterfly.v:124" *) $signed(32'd2147418112);
  assign _019_ = $signed(\butterfly_0.Yi_full_F ) > (* src = "fft_top.v:95|butterfly.v:124" *) $signed(32'd2147418112);
  assign _020_ = $signed(\butterfly_0.Xr_full_F ) < (* src = "fft_top.v:95|butterfly.v:129" *) $signed(32'd2147483648);
  assign _021_ = $signed(\butterfly_0.Xi_full_F ) < (* src = "fft_top.v:95|butterfly.v:129" *) $signed(32'd2147483648);
  assign _022_ = $signed(\butterfly_0.Yr_full_F ) < (* src = "fft_top.v:95|butterfly.v:129" *) $signed(32'd2147483648);
  assign _023_ = $signed(\butterfly_0.Yi_full_F ) < (* src = "fft_top.v:95|butterfly.v:129" *) $signed(32'd2147483648);
  assign { _010_[29], _010_[26:0], _024_[1:0] } = $signed(\butterfly_0.Br_F ) * (* src = "fft_top.v:95|butterfly.v:91" *) $signed(\butterfly_0.Wr_F );
  assign { _011_[29], _011_[26:0], _025_[1:0] } = $signed(\butterfly_0.Bi_F ) * (* src = "fft_top.v:95|butterfly.v:92" *) $signed(\butterfly_0.Wi_F );
  assign { _008_[29], _008_[26:0], _026_[1:0] } = $signed(\butterfly_0.Br_F ) * (* src = "fft_top.v:95|butterfly.v:93" *) $signed(\butterfly_0.Wi_F );
  assign { _009_[29], _009_[26:0], _027_[1:0] } = $signed(\butterfly_0.Bi_F ) * (* src = "fft_top.v:95|butterfly.v:94" *) $signed(\butterfly_0.Wr_F );
  always @(posedge clk)
      \butterfly_0.Xr_F  <= _000_;
  always @(posedge clk)
      \butterfly_0.Xi_F  <= _001_;
  always @(posedge clk)
      \butterfly_0.Yr_F  <= _002_;
  always @(posedge clk)
      \butterfly_0.Yi_F  <= _003_;
  always @(posedge clk)
      \butterfly_0.Ar_Fd2  <= \butterfly_0.Ar_F ;
  always @(posedge clk)
      \butterfly_0.Ar_F  <= \mem_32x16_0.read_data_1 [31:16];
  always @(posedge clk)
      \butterfly_0.Zra_F  <= { _010_[29], _010_[29], _010_[29], _010_[26:0] };
  always @(posedge clk)
      \butterfly_0.Ai_Fd2  <= \butterfly_0.Ai_F ;
  always @(posedge clk)
      \butterfly_0.Br_F  <= \mem_32x16_0.read_data_2 [31:16];
  always @(posedge clk)
      \butterfly_0.Wr_F  <= W[31:16];
  always @(posedge clk)
      \butterfly_0.Wi_F  <= W[15:0];
  always @(posedge clk)
      \butterfly_0.Ai_F  <= \mem_32x16_0.read_data_1 [15:0];
  always @(posedge clk)
      \butterfly_0.Bi_F  <= \mem_32x16_0.read_data_2 [15:0];
  always @(posedge clk)
      \butterfly_0.Zrb_F  <= { _011_[29], _011_[29], _011_[29], _011_[26:0] };
  always @(posedge clk)
      \butterfly_0.Zia_F  <= { _008_[29], _008_[29], _008_[29], _008_[26:0] };
  always @(posedge clk)
      \butterfly_0.Zib_F  <= { _009_[29], _009_[29], _009_[29], _009_[26:0] };
  always @(posedge clk)
      \butterfly_0.Xr_full_F  <= _005_;
  always @(posedge clk)
      \butterfly_0.Xi_full_F  <= _004_;
  always @(posedge clk)
      \butterfly_0.Yr_full_F  <= _007_;
  always @(posedge clk)
      \butterfly_0.Yi_full_F  <= _006_;
  assign _014_ = _022_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:95|butterfly.v:129" *) 16'h8000 : \butterfly_0.Yr_full_F [28:13];
  assign _002_ = _018_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:95|butterfly.v:124" *) 16'h7fff : _014_;
  assign _013_ = _021_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:95|butterfly.v:129" *) 16'h8000 : \butterfly_0.Xi_full_F [28:13];
  assign _001_ = _017_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:95|butterfly.v:124" *) 16'h7fff : _013_;
  assign _012_ = _020_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:95|butterfly.v:129" *) 16'h8000 : \butterfly_0.Xr_full_F [28:13];
  assign _000_ = _016_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:95|butterfly.v:124" *) 16'h7fff : _012_;
  assign _015_ = _023_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:95|butterfly.v:129" *) 16'h8000 : \butterfly_0.Yi_full_F [28:13];
  assign _003_ = _019_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:95|butterfly.v:124" *) 16'h7fff : _015_;
  assign _006_ = { \butterfly_0.Ai_Fd2 [15], \butterfly_0.Ai_Fd2 [15], \butterfly_0.Ai_Fd2 [15], \butterfly_0.Ai_Fd2 [15], \butterfly_0.Ai_Fd2 , 12'h000 } - (* src = "fft_top.v:95|butterfly.v:100" *) { \butterfly_0.Ziadd [30], \butterfly_0.Ziadd  };
  assign \butterfly_0.Zrsub  = { \butterfly_0.Zra_F [29], \butterfly_0.Zra_F  } - (* src = "fft_top.v:95|butterfly.v:70" *) { \butterfly_0.Zrb_F [29], \butterfly_0.Zrb_F  };
  assign _007_ = { \butterfly_0.Ar_Fd2 [15], \butterfly_0.Ar_Fd2 [15], \butterfly_0.Ar_Fd2 [15], \butterfly_0.Ar_Fd2 [15], \butterfly_0.Ar_Fd2 , 12'h000 } - (* src = "fft_top.v:95|butterfly.v:99" *) { \butterfly_0.Zrsub [30], \butterfly_0.Zrsub  };
  assign _078_ = \fft_ctrl_sm_0.butterfly_F  + (* src = "fft_top.v:56|fft_ctrl_sm.v:209" *) 32'd1;
  assign _079_ = \fft_ctrl_sm_0.stage_F  + (* src = "fft_top.v:56|fft_ctrl_sm.v:246" *) 32'd1;
  assign _077_ = \fft_ctrl_sm_0.counter_F  + (* src = "fft_top.v:56|fft_ctrl_sm.v:299" *) 32'd1;
  assign _081_ = _113_ | _112_;
  assign _082_ = _114_ | _113_;
  assign _080_ = | { _112_, _113_, _114_ };
  assign _083_ = _113_ ? _075_ : _070_;
  assign _084_ = _112_ ? _076_ : _083_;
  assign _085_ = _118_ ? _058_ : \fft_ctrl_sm_0.current_state_F ;
  assign _086_ = _117_ ? _067_ : _085_;
  assign \fft_ctrl_sm_0.next_state  = _080_ ? _084_ : _086_;
  assign _087_ = _118_ ? _056_ : \fft_ctrl_sm_0.counter_F ;
  assign _088_ = _117_ ? _056_ : _087_;
  assign \fft_ctrl_sm_0.counter  = _081_ ? _077_[3:0] : _088_;
  assign _089_ = _118_ ? _063_ : \fft_ctrl_sm_0.write_data_1_F ;
  assign \fft_ctrl_sm_0.write_data_1  = _117_ ? _063_ : _089_;
  assign _090_ = _113_ ? 1'h1 : _065_;
  assign _091_ = _118_ ? _064_ : 1'h0;
  assign _092_ = _117_ ? _064_ : _091_;
  assign \fft_ctrl_sm_0.write_en_1  = _082_ ? _090_ : _092_;
  assign _093_ = _118_ ? _062_ : \fft_ctrl_sm_0.write_addr_1_F ;
  assign _094_ = _117_ ? _062_ : _093_;
  assign \fft_ctrl_sm_0.write_addr_1  = _082_ ? \fft_ctrl_sm_0.A_addr_Fd4  : _094_;
  assign _095_ = _118_ ? 1'h0 : 1'h1;
  assign \fft_ctrl_sm_0.in_stall  = _117_ ? _057_ : _095_;
  assign _096_ = _113_ ? 1'h1 : 1'h0;
  assign \fft_ctrl_sm_0.out_push  = _112_ ? 1'h1 : _096_;
  assign _097_ = _114_ ? 1'h1 : 1'h0;
  assign \fft_ctrl_sm_0.write_back  = _113_ ? 1'h1 : _097_;
  assign _098_ = _117_ ? _060_ : \fft_ctrl_sm_0.read_addr_2_F ;
  assign \fft_ctrl_sm_0.read_addr_2  = _114_ ? \fft_ctrl_sm_0.B_addr  : _098_;
  assign _099_ = _114_ ? _065_ : 1'h0;
  assign \fft_ctrl_sm_0.write_en_2  = _113_ ? 1'h1 : _099_;
  assign _100_ = _114_ ? \fft_ctrl_sm_0.B_addr_Fd4  : \fft_ctrl_sm_0.write_addr_2_F ;
  assign \fft_ctrl_sm_0.write_addr_2  = _113_ ? \fft_ctrl_sm_0.B_addr_Fd4  : _100_;
  assign _101_ = _117_ ? _059_ : \fft_ctrl_sm_0.read_addr_1_F ;
  assign _102_ = _114_ ? \fft_ctrl_sm_0.A_addr  : _101_;
  assign \fft_ctrl_sm_0.read_addr_1  = _081_ ? { \fft_ctrl_sm_0.counter_F [0], \fft_ctrl_sm_0.counter_F [1], \fft_ctrl_sm_0.counter_F [2], \fft_ctrl_sm_0.counter_F [3] } : _102_;
  assign _103_ = _117_ ? _055_ : \fft_ctrl_sm_0.butterfly_F ;
  assign \fft_ctrl_sm_0.butterfly  = _114_ ? _066_ : _103_;
  assign _105_ = \fft_ctrl_sm_0.counter_F  == (* src = "fft_top.v:56|fft_ctrl_sm.v:155" *) 4'hb;
  assign _104_ = ~ (* src = "fft_top.v:56|fft_ctrl_sm.v:171" *) \fft_ctrl_sm_0.in_stall_F ;
  assign _108_ = \fft_ctrl_sm_0.stage_F  == (* src = "fft_top.v:56|fft_ctrl_sm.v:249" *) 2'h3;
  assign _110_ = \fft_ctrl_sm_0.counter_F  == (* src = "fft_top.v:56|fft_ctrl_sm.v:281" *) 4'h3;
  assign _106_ = \fft_ctrl_sm_0.counter_F  == (* src = "fft_top.v:56|fft_ctrl_sm.v:302" *) 4'hf;
  assign _111_ = _104_ && (* src = "fft_top.v:56|fft_ctrl_sm.v:171" *) in_push;
  always @(posedge clk)
      \fft_ctrl_sm_0.out_push_F  <= _041_;
  always @(posedge clk)
      \fft_ctrl_sm_0.in_stall_F  <= _040_;
  always @(posedge clk)
      \fft_ctrl_sm_0.read_addr_1_F  <= _042_;
  always @(posedge clk)
      \fft_ctrl_sm_0.read_addr_2_F  <= _043_;
  always @(posedge clk)
      \fft_ctrl_sm_0.W_addr_F  <= _036_;
  always @(posedge clk)
      \fft_ctrl_sm_0.write_addr_1_F  <= _049_;
  always @(posedge clk)
      \fft_ctrl_sm_0.write_data_1_F  <= _052_;
  always @(posedge clk)
      \fft_ctrl_sm_0.write_en_1_F  <= _053_;
  always @(posedge clk)
      \fft_ctrl_sm_0.write_addr_2_F  <= _050_;
  always @(posedge clk)
      \fft_ctrl_sm_0.write_en_2_F  <= _054_;
  always @(posedge clk)
      \fft_ctrl_sm_0.write_back_F  <= _051_;
  always @(posedge clk)
      \fft_ctrl_sm_0.counter_F  <= _038_;
  always @(posedge clk)
      \fft_ctrl_sm_0.current_state_F  <= _039_;
  always @(posedge clk)
      \fft_ctrl_sm_0.stage_F  <= _048_;
  always @(posedge clk)
      \fft_ctrl_sm_0.butterfly_F  <= _037_;
  always @(posedge clk)
      \fft_ctrl_sm_0.skip_F  <= _044_;
  always @(posedge clk)
      \fft_ctrl_sm_0.skip_Fd2  <= _045_;
  always @(posedge clk)
      \fft_ctrl_sm_0.skip_Fd3  <= _046_;
  always @(posedge clk)
      \fft_ctrl_sm_0.skip_Fd4  <= _047_;
  always @(posedge clk)
      \fft_ctrl_sm_0.A_addr_F  <= _028_;
  always @(posedge clk)
      \fft_ctrl_sm_0.A_addr_Fd2  <= _029_;
  always @(posedge clk)
      \fft_ctrl_sm_0.A_addr_Fd3  <= _030_;
  always @(posedge clk)
      \fft_ctrl_sm_0.A_addr_Fd4  <= _031_;
  always @(posedge clk)
      \fft_ctrl_sm_0.B_addr_F  <= _032_;
  always @(posedge clk)
      \fft_ctrl_sm_0.B_addr_Fd2  <= _033_;
  always @(posedge clk)
      \fft_ctrl_sm_0.B_addr_Fd3  <= _034_;
  always @(posedge clk)
      \fft_ctrl_sm_0.B_addr_Fd4  <= _035_;
  assign _035_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) \fft_ctrl_sm_0.B_addr_Fd4  : \fft_ctrl_sm_0.B_addr_Fd3 ;
  assign _034_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) \fft_ctrl_sm_0.B_addr_Fd3  : \fft_ctrl_sm_0.B_addr_Fd2 ;
  assign _033_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) \fft_ctrl_sm_0.B_addr_Fd2  : \fft_ctrl_sm_0.B_addr_F ;
  assign _032_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) \fft_ctrl_sm_0.B_addr_F  : \fft_ctrl_sm_0.B_addr ;
  assign _031_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) \fft_ctrl_sm_0.A_addr_Fd4  : \fft_ctrl_sm_0.A_addr_Fd3 ;
  assign _030_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) \fft_ctrl_sm_0.A_addr_Fd3  : \fft_ctrl_sm_0.A_addr_Fd2 ;
  assign _029_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) \fft_ctrl_sm_0.A_addr_Fd2  : \fft_ctrl_sm_0.A_addr_F ;
  assign _028_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) \fft_ctrl_sm_0.A_addr_F  : \fft_ctrl_sm_0.A_addr ;
  assign _047_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) 1'h0 : \fft_ctrl_sm_0.skip_Fd3 ;
  assign _046_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) 1'h0 : \fft_ctrl_sm_0.skip_Fd2 ;
  assign _045_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) 1'h0 : \fft_ctrl_sm_0.skip_F ;
  assign _044_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) 1'h0 : \fft_ctrl_sm_0.skip ;
  assign _037_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) 3'h0 : \fft_ctrl_sm_0.butterfly ;
  assign _048_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) 2'h0 : \fft_ctrl_sm_0.stage ;
  assign _039_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) 5'h01 : \fft_ctrl_sm_0.next_state ;
  assign _038_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) 4'h0 : \fft_ctrl_sm_0.counter ;
  assign _051_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) 1'h0 : \fft_ctrl_sm_0.write_back ;
  assign _054_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) 1'h0 : \fft_ctrl_sm_0.write_en_2 ;
  assign _050_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) 4'h0 : \fft_ctrl_sm_0.write_addr_2 ;
  assign _053_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) 1'h0 : \fft_ctrl_sm_0.write_en_1 ;
  assign _052_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) 32'd0 : \fft_ctrl_sm_0.write_data_1 ;
  assign _049_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) 4'h0 : \fft_ctrl_sm_0.write_addr_1 ;
  assign _036_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) 3'h0 : \fft_ctrl_sm_0.W_addr ;
  assign _043_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) 4'h0 : \fft_ctrl_sm_0.read_addr_2 ;
  assign _042_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) 4'h0 : \fft_ctrl_sm_0.read_addr_1 ;
  assign _040_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) 1'h1 : \fft_ctrl_sm_0.in_stall ;
  assign _041_ = reset ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:318" *) 1'h0 : \fft_ctrl_sm_0.out_push ;
  assign _076_ = _106_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:302" *) 5'h01 : \fft_ctrl_sm_0.current_state_F ;
  assign _075_ = _110_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:281" *) 5'h10 : \fft_ctrl_sm_0.current_state_F ;
  assign _073_ = _108_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:249" *) 5'h08 : \fft_ctrl_sm_0.current_state_F ;
  assign _115_ = _109_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:243" *) _073_ : \fft_ctrl_sm_0.current_state_F ;
  assign _070_ = _114_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:134" *) _115_ : 5'hxx;
  assign _074_ = _109_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:243" *) _079_[1:0] : \fft_ctrl_sm_0.stage_F ;
  assign _072_ = \fft_ctrl_sm_0.skip_F  ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:227" *) _078_[2:0] : \fft_ctrl_sm_0.butterfly_F ;
  assign _071_ = \fft_ctrl_sm_0.skip_F  ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:227" *) 1'h0 : 1'h1;
  assign _068_ = _108_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:224" *) _071_ : 1'h0;
  assign _069_ = _108_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:224" *) _072_ : _078_[2:0];
  assign _061_ = _107_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:222" *) _068_ : 1'h0;
  assign _066_ = _107_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:222" *) _069_ : _078_[2:0];
  assign _116_ = \fft_ctrl_sm_0.skip_Fd4  ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:215" *) 1'h0 : 1'h1;
  assign _065_ = _114_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:134" *) _116_ : 1'hx;
  assign _067_ = _106_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:190" *) 5'h04 : \fft_ctrl_sm_0.current_state_F ;
  assign _057_ = _106_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:190" *) 1'h1 : 1'h0;
  assign _055_ = _111_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:171" *) _078_[2:0] : \fft_ctrl_sm_0.butterfly_F ;
  assign _060_ = _111_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:171" *) \fft_ctrl_sm_0.B_addr  : \fft_ctrl_sm_0.read_addr_2_F ;
  assign _059_ = _111_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:171" *) \fft_ctrl_sm_0.A_addr  : \fft_ctrl_sm_0.read_addr_1_F ;
  assign _058_ = _105_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:155" *) 5'h02 : \fft_ctrl_sm_0.current_state_F ;
  assign _056_ = _111_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:142" *) _077_[3:0] : \fft_ctrl_sm_0.counter_F ;
  assign _064_ = _111_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:142" *) 1'h1 : 1'h0;
  assign _063_ = _111_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:142" *) { in_real, in_imag } : \fft_ctrl_sm_0.write_data_1_F ;
  assign _062_ = _111_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:142" *) \fft_ctrl_sm_0.counter_F  : \fft_ctrl_sm_0.write_addr_1_F ;
  assign _118_ = \fft_ctrl_sm_0.current_state_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:134" *) 5'h01;
  assign \fft_ctrl_sm_0.skip  = _114_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:134" *) _061_ : 1'h0;
  assign _112_ = \fft_ctrl_sm_0.current_state_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:134" *) 5'h10;
  assign _113_ = \fft_ctrl_sm_0.current_state_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:134" *) 5'h08;
  assign _117_ = \fft_ctrl_sm_0.current_state_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:134" *) 5'h02;
  assign \fft_ctrl_sm_0.stage  = _114_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:134" *) _074_ : \fft_ctrl_sm_0.stage_F ;
  assign _114_ = \fft_ctrl_sm_0.current_state_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:134" *) 5'h04;
  assign _134_ = _208_ | _108_;
  assign _133_ = _202_ | _109_;
  assign _132_ = _206_ | _205_;
  assign _131_ = | { _133_, _203_, _204_ };
  assign _135_ = _132_ ? _200_ : _201_;
  assign _129_ = _131_ ? _151_ : _135_;
  assign _136_ = _109_ ? 4'he : 4'h6;
  assign _137_ = _203_ ? 4'ha : 4'h2;
  assign _138_ = _133_ ? _136_ : _137_;
  assign _141_ = _132_ ? _139_ : _140_;
  assign _128_ = _131_ ? _138_ : _141_;
  assign _142_ = _109_ ? 3'h6 : 3'h4;
  assign _143_ = _203_ ? 3'h2 : 3'h0;
  assign _144_ = _133_ ? _142_ : _143_;
  assign _145_ = _205_ ? 3'h6 : 3'h4;
  assign _146_ = _207_ ? 3'h2 : 3'h0;
  assign _147_ = _132_ ? _145_ : _146_;
  assign _148_ = _131_ ? _144_ : _147_;
  assign _149_ = _109_ ? 4'hf : 4'h7;
  assign _150_ = _203_ ? 4'hb : 4'h3;
  assign _151_ = _133_ ? _149_ : _150_;
  assign _152_ = _205_ ? 4'he : 4'h6;
  assign _153_ = _207_ ? 4'ha : 4'h2;
  assign _154_ = _132_ ? _152_ : _153_;
  assign _155_ = _131_ ? _151_ : _154_;
  assign _156_ = _109_ ? 4'hd : 4'h5;
  assign _158_ = _133_ ? _156_ : _157_;
  assign _139_ = _205_ ? 4'hc : 4'h4;
  assign _159_ = _131_ ? _158_ : _141_;
  assign _160_ = _109_ ? 3'h4 : 3'h0;
  assign _161_ = _203_ ? 3'h4 : 3'h0;
  assign _162_ = _133_ ? _160_ : _161_;
  assign _163_ = _205_ ? 3'h4 : 3'h0;
  assign _164_ = _207_ ? 3'h4 : 3'h0;
  assign _165_ = _132_ ? _163_ : _164_;
  assign _124_ = _131_ ? _162_ : _165_;
  assign _166_ = _203_ ? 4'hd : 4'h5;
  assign _167_ = _133_ ? _149_ : _166_;
  assign _168_ = _207_ ? 4'hc : 4'h4;
  assign _169_ = _132_ ? _152_ : _168_;
  assign _123_ = _131_ ? _167_ : _169_;
  assign _170_ = _109_ ? 4'hb : 4'h3;
  assign _157_ = _203_ ? 4'h9 : 4'h1;
  assign _171_ = _133_ ? _170_ : _157_;
  assign _172_ = _205_ ? 4'ha : 4'h2;
  assign _140_ = _207_ ? 4'h8 : 4'h0;
  assign _173_ = _132_ ? _172_ : _140_;
  assign _122_ = _131_ ? _171_ : _173_;
  assign _174_ = _109_ ? 4'hf : 4'hb;
  assign _175_ = _203_ ? 4'hd : 4'h9;
  assign _176_ = _133_ ? _174_ : _175_;
  assign _177_ = _205_ ? 4'he : 4'ha;
  assign _178_ = _207_ ? 4'hc : 4'h8;
  assign _179_ = _132_ ? _177_ : _178_;
  assign _180_ = _131_ ? _176_ : _179_;
  assign _181_ = _109_ ? 4'h7 : 4'h3;
  assign _182_ = _203_ ? 4'h5 : 4'h1;
  assign _183_ = _133_ ? _181_ : _182_;
  assign _184_ = _205_ ? 4'h6 : 4'h2;
  assign _185_ = _207_ ? 4'h4 : 4'h0;
  assign _186_ = _132_ ? _184_ : _185_;
  assign _187_ = _131_ ? _183_ : _186_;
  assign _188_ = _108_ ? _129_ : _126_;
  assign _189_ = _209_ ? _123_ : _120_;
  assign \fft_ctrl_sm_0.B_addr  = _134_ ? _188_ : _189_;
  assign _190_ = _108_ ? _128_ : _125_;
  assign _191_ = _209_ ? _122_ : _119_;
  assign \fft_ctrl_sm_0.A_addr  = _134_ ? _190_ : _191_;
  assign _192_ = _108_ ? _130_ : _127_;
  assign _193_ = _209_ ? _124_ : _121_;
  assign \fft_ctrl_sm_0.W_addr  = _134_ ? _192_ : _193_;
  assign _194_ = _109_ ? 3'h7 : 3'h6;
  assign _195_ = _203_ ? 3'h5 : 3'h4;
  assign _196_ = _133_ ? _194_ : _195_;
  assign _197_ = _205_ ? 3'h3 : 3'h2;
  assign _198_ = _207_ ? 3'h1 : 3'h0;
  assign _199_ = _132_ ? _197_ : _198_;
  assign _130_ = _131_ ? _196_ : _199_;
  assign _200_ = _205_ ? 4'hd : 4'h5;
  assign _201_ = _207_ ? 4'h9 : 4'h1;
  assign _127_ = _208_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:17" *) _148_ : 3'hx;
  assign _126_ = _208_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:17" *) _155_ : 4'hx;
  assign _125_ = _208_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:17" *) _159_ : 4'hx;
  assign _121_ = _210_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:17" *) 3'h0 : 3'hx;
  assign _120_ = _210_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:17" *) _180_ : 4'hx;
  assign _109_ = \fft_ctrl_sm_0.butterfly_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:20" *) 3'h7;
  assign _202_ = \fft_ctrl_sm_0.butterfly_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:20" *) 3'h6;
  assign _203_ = \fft_ctrl_sm_0.butterfly_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:20" *) 3'h5;
  assign _204_ = \fft_ctrl_sm_0.butterfly_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:20" *) 3'h4;
  assign _205_ = \fft_ctrl_sm_0.butterfly_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:20" *) 3'h3;
  assign _206_ = \fft_ctrl_sm_0.butterfly_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:20" *) 3'h2;
  assign _207_ = \fft_ctrl_sm_0.butterfly_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:20" *) 3'h1;
  assign _107_ = ! (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:20" *) \fft_ctrl_sm_0.butterfly_F ;
  assign _119_ = _210_ ? (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:17" *) _187_ : 4'hx;
  assign _208_ = \fft_ctrl_sm_0.stage_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:17" *) 2'h2;
  assign _209_ = \fft_ctrl_sm_0.stage_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:17" *) 2'h1;
  assign _210_ = ! (* full_case = 32'd1 *) (* src = "fft_top.v:56|fft_ctrl_sm.v:95|read_addr_lut.v:17" *) \fft_ctrl_sm_0.stage_F ;
  assign _213_[31] = \fft_ctrl_sm_0.write_en_1_F  ? (* src = "fft_top.v:76|mem_32x16.v:41" *) 1'h1 : 1'h0;
  assign _212_ = \fft_ctrl_sm_0.write_en_1_F  ? (* src = "fft_top.v:76|mem_32x16.v:41" *) muxed_write_data_1 : 32'hxxxxxxxx;
  assign _211_ = \fft_ctrl_sm_0.write_en_1_F  ? (* src = "fft_top.v:76|mem_32x16.v:41" *) \fft_ctrl_sm_0.write_addr_1_F  : 4'hx;
  assign _216_[31] = \fft_ctrl_sm_0.write_en_2_F  ? (* src = "fft_top.v:76|mem_32x16.v:45" *) 1'h1 : 1'h0;
  assign _215_ = \fft_ctrl_sm_0.write_en_2_F  ? (* src = "fft_top.v:76|mem_32x16.v:45" *) { \butterfly_0.Yr_F , \butterfly_0.Yi_F  } : 32'hxxxxxxxx;
  assign _214_ = \fft_ctrl_sm_0.write_en_2_F  ? (* src = "fft_top.v:76|mem_32x16.v:45" *) \fft_ctrl_sm_0.write_addr_2_F  : 4'hx;
  assign _218_ = _227_ | _226_;
  assign _219_ = _231_ | _230_;
  assign _217_ = | { _218_, _228_, _229_ };
  assign _220_ = _226_ ? 32'd3303008130 : 32'd3535786687;
  assign _221_ = _228_ ? 32'd3884106975 : 32'd49152;
  assign _222_ = _218_ ? _220_ : _221_;
  assign _223_ = _230_ ? 32'd410961119 : 32'd759288511;
  assign _224_ = _232_ ? 32'd992077698 : 32'd1073741824;
  assign _225_ = _219_ ? _223_ : _224_;
  assign W = _217_ ? _222_ : _225_;
  assign _226_ = \fft_ctrl_sm_0.W_addr_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:90|w_lut.v:16" *) 3'h7;
  assign _227_ = \fft_ctrl_sm_0.W_addr_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:90|w_lut.v:16" *) 3'h6;
  assign _228_ = \fft_ctrl_sm_0.W_addr_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:90|w_lut.v:16" *) 3'h5;
  assign _229_ = \fft_ctrl_sm_0.W_addr_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:90|w_lut.v:16" *) 3'h4;
  assign _230_ = \fft_ctrl_sm_0.W_addr_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:90|w_lut.v:16" *) 3'h3;
  assign _231_ = \fft_ctrl_sm_0.W_addr_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:90|w_lut.v:16" *) 3'h2;
  assign _232_ = \fft_ctrl_sm_0.W_addr_F  == (* full_case = 32'd1 *) (* src = "fft_top.v:90|w_lut.v:16" *) 3'h1;
  assign muxed_write_data_1 = \fft_ctrl_sm_0.write_back_F  ? (* src = "fft_top.v:50" *) { \butterfly_0.Xr_F , \butterfly_0.Xi_F  } : \fft_ctrl_sm_0.write_data_1_F ;
  reg [31:0] \mem_32x16_0.mem_array  [15:0];
  always @(posedge clk) begin
    if (_213_[31]) \mem_32x16_0.mem_array [_211_] <= _212_;
    if (_216_[31]) \mem_32x16_0.mem_array [_214_] <= _215_;
  end
  assign \mem_32x16_0.read_data_1  = \mem_32x16_0.mem_array [\fft_ctrl_sm_0.read_addr_1_F ];
  assign \mem_32x16_0.read_data_2  = \mem_32x16_0.mem_array [\fft_ctrl_sm_0.read_addr_2_F ];
  assign _008_[28:27] = { _008_[29], _008_[29] };
  assign _009_[28:27] = { _009_[29], _009_[29] };
  assign _010_[28:27] = { _010_[29], _010_[29] };
  assign _011_[28:27] = { _011_[29], _011_[29] };
  assign _024_[29:2] = { _010_[29], _010_[26:0] };
  assign _025_[29:2] = { _011_[29], _011_[26:0] };
  assign _026_[29:2] = { _008_[29], _008_[26:0] };
  assign _027_[29:2] = { _009_[29], _009_[26:0] };
  assign _213_[30:0] = { _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31], _213_[31] };
  assign _216_[30:0] = { _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31], _216_[31] };
  assign W_addr = \fft_ctrl_sm_0.W_addr_F ;
  assign X = { \butterfly_0.Xr_F , \butterfly_0.Xi_F  };
  assign Y = { \butterfly_0.Yr_F , \butterfly_0.Yi_F  };
  assign \butterfly_0.Ai  = \mem_32x16_0.read_data_1 [15:0];
  assign \butterfly_0.Ar  = \mem_32x16_0.read_data_1 [31:16];
  assign \butterfly_0.Bi  = \mem_32x16_0.read_data_2 [15:0];
  assign \butterfly_0.Br  = \mem_32x16_0.read_data_2 [31:16];
  assign \butterfly_0.Wi  = W[15:0];
  assign \butterfly_0.Wr  = W[31:16];
  assign \butterfly_0.clk  = clk;
  assign \fft_ctrl_sm_0.clk  = clk;
  assign \fft_ctrl_sm_0.in_imag  = in_imag;
  assign \fft_ctrl_sm_0.in_push  = in_push;
  assign \fft_ctrl_sm_0.in_real  = in_real;
  assign \fft_ctrl_sm_0.out_stall  = out_stall;
  assign \fft_ctrl_sm_0.read_addr_lut_0.A_addr  = \fft_ctrl_sm_0.A_addr ;
  assign \fft_ctrl_sm_0.read_addr_lut_0.B_addr  = \fft_ctrl_sm_0.B_addr ;
  assign \fft_ctrl_sm_0.read_addr_lut_0.W_addr  = \fft_ctrl_sm_0.W_addr ;
  assign \fft_ctrl_sm_0.read_addr_lut_0.butterfly  = \fft_ctrl_sm_0.butterfly_F ;
  assign \fft_ctrl_sm_0.read_addr_lut_0.stage  = \fft_ctrl_sm_0.stage_F ;
  assign \fft_ctrl_sm_0.reset  = reset;
  assign in_stall = \fft_ctrl_sm_0.in_stall_F ;
  assign \mem_32x16_0.clk  = clk;
  assign \mem_32x16_0.read_addr_1  = \fft_ctrl_sm_0.read_addr_1_F ;
  assign \mem_32x16_0.read_addr_2  = \fft_ctrl_sm_0.read_addr_2_F ;
  assign \mem_32x16_0.write_addr_1  = \fft_ctrl_sm_0.write_addr_1_F ;
  assign \mem_32x16_0.write_addr_2  = \fft_ctrl_sm_0.write_addr_2_F ;
  assign \mem_32x16_0.write_data_1  = muxed_write_data_1;
  assign \mem_32x16_0.write_data_2  = { \butterfly_0.Yr_F , \butterfly_0.Yi_F  };
  assign \mem_32x16_0.write_en_1  = \fft_ctrl_sm_0.write_en_1_F ;
  assign \mem_32x16_0.write_en_2  = \fft_ctrl_sm_0.write_en_2_F ;
  assign out_imag_F = \butterfly_0.Ai_F ;
  assign out_push = \fft_ctrl_sm_0.out_push_F ;
  assign out_real_F = \butterfly_0.Ar_F ;
  assign read_addr_1 = \fft_ctrl_sm_0.read_addr_1_F ;
  assign read_addr_2 = \fft_ctrl_sm_0.read_addr_2_F ;
  assign read_data_1 = \mem_32x16_0.read_data_1 ;
  assign read_data_2 = \mem_32x16_0.read_data_2 ;
  assign \w_lut_0.W  = W;
  assign \w_lut_0.addr  = \fft_ctrl_sm_0.W_addr_F ;
  assign write_addr_1 = \fft_ctrl_sm_0.write_addr_1_F ;
  assign write_addr_2 = \fft_ctrl_sm_0.write_addr_2_F ;
  assign write_back = \fft_ctrl_sm_0.write_back_F ;
  assign write_data_1 = \fft_ctrl_sm_0.write_data_1_F ;
  assign write_en_1 = \fft_ctrl_sm_0.write_en_1_F ;
  assign write_en_2 = \fft_ctrl_sm_0.write_en_2_F ;
endmodule
